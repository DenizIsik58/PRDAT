8.1:

> compileToFile (fromFile "ex11.c") "ex11.out";;
val it : Machine.instr list =
  [LDARGS; CALL (1, "L1"); STOP; Label "L1"; INCSP 1; INCSP 1; INCSP 100;
   GETSP; CSTI 99; SUB; INCSP 100; GETSP; CSTI 99; SUB; INCSP 100; GETSP;
   CSTI 99; SUB; INCSP 100; GETSP; CSTI 99; SUB; GETBP; CSTI 2; ADD; CSTI 1;
   STI; INCSP -1; GOTO "L3"; Label "L2"; GETBP; CSTI 103; ADD; LDI; GETBP;
   CSTI 2; ADD; LDI; ADD; CSTI 0; STI; INCSP -1; GETBP; CSTI 2; ADD; GETBP;
   CSTI 2; ADD; LDI; CSTI 1; ADD; STI; INCSP -1; INCSP 0; Label "L3"; GETBP;
   CSTI 2; ADD; LDI; GETBP; CSTI 0; ADD; LDI; SWAP; LT; NOT; IFNZRO "L2";
   GETBP; CSTI 2; ADD; CSTI 1; STI; INCSP -1; GOTO "L5"; Label "L4"; GETBP;
   CSTI 204; ADD; LDI; GETBP; CSTI 2; ADD; LDI; ADD; GETBP; CSTI 305; ADD; LDI;
   GETBP; CSTI 2; ADD; LDI; ADD; CSTI 0; STI; STI; INCSP -1; GETBP; CSTI 2;
   ADD; ...]


> java Machine ex11.out 8:
1 5 8 6 3 7 2 4 
1 6 8 3 7 4 2 5 
1 7 4 6 8 2 5 3 
1 7 5 8 2 4 6 3 
2 4 6 8 3 1 7 5 
2 5 7 1 3 8 6 4 
2 5 7 4 1 8 6 3 
2 6 1 7 4 8 3 5 
2 6 8 3 1 4 7 5 
2 7 3 6 8 5 1 4 
2 7 5 8 1 4 6 3 
2 8 6 1 3 5 7 4 
3 1 7 5 8 2 4 6 
3 5 2 8 1 7 4 6 
3 5 2 8 6 4 7 1 
3 5 7 1 4 2 8 6 
3 5 8 4 1 7 2 6 
3 6 2 5 8 1 7 4 
3 6 2 7 1 4 8 5 
3 6 2 7 5 1 8 4 
3 6 4 1 8 5 7 2 
3 6 4 2 8 5 7 1 
3 6 8 1 4 7 5 2 
3 6 8 1 5 7 2 4 
3 6 8 2 4 1 7 5 
3 7 2 8 5 1 4 6 
3 7 2 8 6 4 1 5 
3 8 4 7 1 6 2 5 
4 1 5 8 2 7 3 6 
4 1 5 8 6 3 7 2 
4 2 5 8 6 1 3 7 
4 2 7 3 6 8 1 5 
4 2 7 3 6 8 5 1 
4 2 7 5 1 8 6 3 
4 2 8 5 7 1 3 6 
4 2 8 6 1 3 5 7 
4 6 1 5 2 8 3 7 
4 6 8 2 7 1 3 5 
4 6 8 3 1 7 5 2 
4 7 1 8 5 2 6 3 
4 7 3 8 2 5 1 6 
4 7 5 2 6 1 3 8 
4 7 5 3 1 6 8 2 
4 8 1 3 6 2 7 5 
4 8 1 5 7 2 6 3 
4 8 5 3 1 7 2 6 
5 1 4 6 8 2 7 3 
5 1 8 4 2 7 3 6 
5 1 8 6 3 7 2 4 
5 2 4 6 8 3 1 7 
5 2 4 7 3 8 6 1 
5 2 6 1 7 4 8 3 
5 2 8 1 4 7 3 6 
5 3 1 6 8 2 4 7 
5 3 1 7 2 8 6 4 
5 3 8 4 7 1 6 2 
5 7 1 3 8 6 4 2 
5 7 1 4 2 8 6 3 
5 7 2 4 8 1 3 6 
5 7 2 6 3 1 4 8 
5 7 2 6 3 1 8 4 
5 7 4 1 3 8 6 2 
5 8 4 1 3 6 2 7 
5 8 4 1 7 2 6 3 
6 1 5 2 8 3 7 4 
6 2 7 1 3 5 8 4 
6 2 7 1 4 8 5 3 
6 3 1 7 5 8 2 4 
6 3 1 8 4 2 7 5 
6 3 1 8 5 2 4 7 
6 3 5 7 1 4 2 8 
6 3 5 8 1 4 2 7 
6 3 7 2 4 8 1 5 
6 3 7 2 8 5 1 4 
6 3 7 4 1 8 2 5 
6 4 1 5 8 2 7 3 
6 4 2 8 5 7 1 3 
6 4 7 1 3 5 2 8 
6 4 7 1 8 2 5 3 
6 8 2 4 1 7 5 3 
7 1 3 8 6 4 2 5 
7 2 4 1 8 5 3 6 
7 2 6 3 1 4 8 5 
7 3 1 6 8 5 2 4 
7 3 8 2 5 1 6 4 
7 4 2 5 8 1 3 6 
7 4 2 8 6 1 3 5 
7 5 3 1 6 8 2 4 
8 2 4 1 7 5 3 6 
8 2 5 3 1 7 4 6 
8 3 1 6 2 5 7 4 
8 4 1 3 6 2 7 5 

Ran 0.106 seconds


val it : Machine.instr list =
  [LDARGS; CALL (1, "L1"); STOP; Label "L1"; INCSP 1; GETBP; CSTI 1; ADD;
   CSTI 0; STI; INCSP -1; GOTO "L3"; Label "L2"; GETBP; CSTI 1; ADD; LDI;
   PRINTI; INCSP -1; GETBP; CSTI 1; ADD; GETBP; CSTI 1; ADD; LDI; CSTI 1; ADD;
   STI; INCSP -1; INCSP 0; Label "L3"; GETBP; CSTI 1; ADD; LDI; GETBP; CSTI 0;
   ADD; LDI; LT; IFNZRO "L2"; INCSP -1; RET 0]



val it : Machine.instr list =
  [LDARGS; CALL (1, "L1"); STOP; Label "L1"; INCSP 1; GETBP; CSTI 1; ADD;
   GETBP; CSTI 0; ADD; LDI; STI; INCSP -1; INCSP 1; GETBP; CSTI 0; ADD; LDI;
   GETBP; CSTI 2; ADD; CALL (2, "L2"); INCSP -1; GETBP; CSTI 2; ADD; LDI;
   PRINTI; INCSP -1; INCSP -1; GETBP; CSTI 1; ADD; LDI; PRINTI; INCSP -1;
   INCSP -1; RET 0; Label "L2"; GETBP; CSTI 1; ADD; LDI; GETBP; CSTI 0; ADD;
   LDI; GETBP; CSTI 0; ADD; LDI; MUL; STI; INCSP -1; INCSP 0; RET 1]


LDRAGS: 
CALL: 1 5
STOP:

Since the first instruction of the stack machine is 24, it requires command line args.
The next instruction is 19 which is calling a function and requires 2 inputs (1 and 5).
The last instruction is 25 which means STOP.

How is the block in ex5.c visible?

It is visible from the bytecode where we can see 22 15 and -1. 
When calling 22 we are printing r and when we see 15 (INCSP) and then we are cleaning up by shrinking the stack by 1.


> java MAchine ex3.out 10
0 1 2 3 4 5 6 7 8 9 
Ran 0.027 seconds



Explanation of bytecode ex3-out:
24      -> {0: LDARGS}
19 1 5 -> {1: CALL 1 5}
15 1  -> {5: INCSP 1}
13    -> {7: GETBP} 
0 1   -> {8: CSTI 1}
1     -> {10: ADD}
0 0   -> {11: CSTI 0}
12    -> {13: STI}
15 -1 -> {14: INCSP -1}
16 43 -> {16: GOTO 43}
13    -> {43: GETBP}
0 1   -> {44: CSTI 1}
1     -> {46: ADD}
11    -> {47: LDI}
13    -> {48: GETBP}
0 0   -> {49: CSTI 0}
1     -> {51: ADD}
11    -> {52: LDI} 
7     -> {53 : LT}
18 18 -> {54: IFNZRO 18}


13    -> {18: GETBP}
0 1   -> {19: CSTI 1}
1     -> {21: ADD}
11    -> {22: LDI}
22    -> {23: PRINTI} 
15 -1 -> {24: INCSP -1}
13    -> {26: GETBP}
0 1   -> {27: CSTI 1}
1     -> {29: ADD }
13    -> {30: GETBP}
0 1   -> {31: CSTI 1}
1     -> {33: ADD}
11    -> {34: LDI}
0 1   -> {35: CSTI 1} 
1     -> {37: ADD}
12    -> {38: STI} 
15 -1 -> {39: INCSP -1}
15 0  -> {41: INCSP 0}
13    -> {43: GETBP}
0 1   -> {44: CSTI 1}
1     -> {46: ADD}
11    -> {47: LDI}
13    -> {48: GETBP}
0 0   -> {49: CSTI 0}
1     -> {51: ADD}
11    -> {52: LDI}
7     -> {53: LT}
18 18 -> {54: IFNZRO 18}


13    -> {18: GETBP}
0 1   -> {19: CSTI 1}
1     -> {21: ADD}
11    -> {22: LDI}
22    -> {23: PRINTI} 
15 -1 -> {24: INCSP -1}
13    -> {26: GETBP}
0 1   -> {27: CSTI 1}
1     -> {29: ADD }
13    -> {30: GETBP}
0 1   -> {31: CSTI 1}
1     -> {33: ADD}
11    -> {34: LDI}
0 1   -> {35: CSTI 1} 
1     -> {37: ADD}
12    -> {38: STI} 
15 -1 -> {39: INCSP -1}
15 0  -> {41: INCSP 0}
13    -> {43: GETBP}
0 1   -> {44: CSTI 1}
1     -> {46: ADD}
11    -> {47: LDI}
13    -> {48: GETBP}
0 0   -> {49: CSTI 0}
1     -> {51: ADD}
11    -> {52: LDI}
7     -> {53: LT}
18 18 -> {54: IFNZRO 18}


13    -> {18: GETBP}
0 1   -> {19: CSTI 1}
1     -> {21: ADD}
11    -> {22: LDI}
22    -> {23: PRINTI} 
15 -1 -> {24: INCSP -1}
13    -> {26: GETBP}
0 1   -> {27: CSTI 1}
1     -> {29: ADD }
13    -> {30: GETBP}
0 1   -> {31: CSTI 1}
1     -> {33: ADD}
11    -> {34: LDI}
0 1   -> {35: CSTI 1} 
1     -> {37: ADD}
12    -> {38: STI} 
15 -1 -> {39: INCSP -1}
15 0  -> {41: INCSP 0}
13    -> {43: GETBP}
0 1   -> {44: CSTI 1}
1     -> {46: ADD}
11    -> {47: LDI}
13    -> {48: GETBP}
0 0   -> {49: CSTI 0}
1     -> {51: ADD}
11    -> {52: LDI}
7     -> {53: LT}
18 18 -> {54: IFNZRO 18}

15 -1 -> {56: INCSP -1}
21 0  -> {58: RET 0}; // Done here 



> java Machinetrace ex3.out 4 > ex3trace.txt

[ ]{0: LDARGS}                                      | Give args 
[ 4 ]{1: CALL 1 5}                                  | Call the main function


[ 4 -999 4 ]{5: INCSP 1}                            |  
[ 4 -999 4 0 ]{7: GETBP}                            | 
[ 4 -999 4 0 2 ]{8: CSTI 1}                         |
[ 4 -999 4 0 2 1 ]{10: ADD}                         |   Initialization of i
[ 4 -999 4 0 3 ]{11: CSTI 0}                        |            
[ 4 -999 4 0 3 0 ]{13: STI}                         |
[ 4 -999 4 0 0 ]{14: INCSP -1}                      |



[ 4 -999 4 0 ]{16: GOTO 43}                         | Enter while loop
[ 4 -999 4 0 ]{43: GETBP}                           |
[ 4 -999 4 0 2 ]{44: CSTI 1}                        |
[ 4 -999 4 0 2 1 ]{46: ADD}                         |
[ 4 -999 4 0 3 ]{47: LDI}                           |
[ 4 -999 4 0 0 ]{48: GETBP}                         |
[ 4 -999 4 0 0 2 ]{49: CSTI 0}                      |
[ 4 -999 4 0 0 2 0 ]{51: ADD}                       |
[ 4 -999 4 0 0 2 ]{52: LDI}                         |
[ 4 -999 4 0 0 4 ]{53: LT}                          | Check if i < n
[ 4 -999 4 0 1 ]{54: IFNZRO 18}                     | Enter while loop if i < n 


[ 4 -999 4 0 ]{18: GETBP}                           | Print
[ 4 -999 4 0 2 ]{19: CSTI 1}                        |
[ 4 -999 4 0 2 1 ]{21: ADD}                         |
[ 4 -999 4 0 3 ]{22: LDI}                           |
[ 4 -999 4 0 0 ]{23: PRINTI}                        |

[ 4 -999 4 0 0 ]{24: INCSP -1}                      | Increment i
[ 4 -999 4 0 ]{26: GETBP}                           |
[ 4 -999 4 0 2 ]{27: CSTI 1}                        |
[ 4 -999 4 0 2 1 ]{29: ADD}                         |
[ 4 -999 4 0 3 ]{30: GETBP}                         |
[ 4 -999 4 0 3 2 ]{31: CSTI 1}                      |
[ 4 -999 4 0 3 2 1 ]{33: ADD}                       |
[ 4 -999 4 0 3 3 ]{34: LDI}                         |
[ 4 -999 4 0 3 0 ]{35: CSTI 1}                      |
[ 4 -999 4 0 3 0 1 ]{37: ADD}                       |
[ 4 -999 4 0 3 1 ]{38: STI}                         | Save i

[ 4 -999 4 1 1 ]{39: INCSP -1}                      | Determine if while loop should continue
[ 4 -999 4 1 ]{41: INCSP 0}                         |
[ 4 -999 4 1 ]{43: GETBP}                           |
[ 4 -999 4 1 2 ]{44: CSTI 1}                        |
[ 4 -999 4 1 2 1 ]{46: ADD}                         |
[ 4 -999 4 1 3 ]{47: LDI}                           |
[ 4 -999 4 1 1 ]{48: GETBP}                         |
[ 4 -999 4 1 1 2 ]{49: CSTI 0}                      |
[ 4 -999 4 1 1 2 0 ]{51: ADD}                       |
[ 4 -999 4 1 1 2 ]{52: LDI}                         |
[ 4 -999 4 1 1 4 ]{53: LT}                          |
[ 4 -999 4 1 1 ]{54: IFNZRO 18}                     |


[ 4 -999 4 1 ]{18: GETBP}                           | Print i
[ 4 -999 4 1 2 ]{19: CSTI 1}                        |
[ 4 -999 4 1 2 1 ]{21: ADD}                         |
[ 4 -999 4 1 3 ]{22: LDI}                           |
[ 4 -999 4 1 1 ]{23: PRINTI}                        |

1 [ 4 -999 4 1 1 ]{24: INCSP -1}                    | Increment i
[ 4 -999 4 1 ]{26: GETBP}                           |
[ 4 -999 4 1 2 ]{27: CSTI 1}                        |
[ 4 -999 4 1 2 1 ]{29: ADD}                         |   
[ 4 -999 4 1 3 ]{30: GETBP}                         |
[ 4 -999 4 1 3 2 ]{31: CSTI 1}                      |
[ 4 -999 4 1 3 2 1 ]{33: ADD}                       |
[ 4 -999 4 1 3 3 ]{34: LDI}                         |
[ 4 -999 4 1 3 1 ]{35: CSTI 1}                      |
[ 4 -999 4 1 3 1 1 ]{37: ADD}                       |
[ 4 -999 4 1 3 2 ]{38: STI}                         | Save i

[ 4 -999 4 2 2 ]{39: INCSP -1}                      | Check if while loop whould continue
[ 4 -999 4 2 ]{41: INCSP 0}                         |
[ 4 -999 4 2 ]{43: GETBP}                           |
[ 4 -999 4 2 2 ]{44: CSTI 1}                        |
[ 4 -999 4 2 2 1 ]{46: ADD}                         |
[ 4 -999 4 2 3 ]{47: LDI}                           |
[ 4 -999 4 2 2 ]{48: GETBP}                         |
[ 4 -999 4 2 2 2 ]{49: CSTI 0}                      |
[ 4 -999 4 2 2 2 0 ]{51: ADD}                       |
[ 4 -999 4 2 2 2 ]{52: LDI}                         |
[ 4 -999 4 2 2 4 ]{53: LT}                          |
[ 4 -999 4 2 1 ]{54: IFNZRO 18}                     |

[ 4 -999 4 2 ]{18: GETBP}                           | Print i
[ 4 -999 4 2 2 ]{19: CSTI 1}                        |
[ 4 -999 4 2 2 1 ]{21: ADD}                         |
[ 4 -999 4 2 3 ]{22: LDI}                           |
[ 4 -999 4 2 2 ]{23: PRINTI}                        |

[ 4 -999 4 2 2 ]{24: INCSP -1}                      | Increment i
[ 4 -999 4 2 ]{26: GETBP}                           |
[ 4 -999 4 2 2 ]{27: CSTI 1}                        |
[ 4 -999 4 2 2 1 ]{29: ADD}                         |
[ 4 -999 4 2 3 ]{30: GETBP}                         |
[ 4 -999 4 2 3 2 ]{31: CSTI 1}                      |
[ 4 -999 4 2 3 2 1 ]{33: ADD}                       |
[ 4 -999 4 2 3 3 ]{34: LDI}                         |
[ 4 -999 4 2 3 2 ]{35: CSTI 1}                      |
[ 4 -999 4 2 3 2 1 ]{37: ADD}                       |
[ 4 -999 4 2 3 3 ]{38: STI}                         | Save i

[ 4 -999 4 3 3 ]{39: INCSP -1}                      | Check if while loop should continue
[ 4 -999 4 3 ]{41: INCSP 0}                         |
[ 4 -999 4 3 ]{43: GETBP}                           |
[ 4 -999 4 3 2 ]{44: CSTI 1}                        |
[ 4 -999 4 3 2 1 ]{46: ADD}                         |
[ 4 -999 4 3 3 ]{47: LDI}                           |
[ 4 -999 4 3 3 ]{48: GETBP}                         |
[ 4 -999 4 3 3 2 ]{49: CSTI 0}                      |
[ 4 -999 4 3 3 2 0 ]{51: ADD}                       |
[ 4 -999 4 3 3 2 ]{52: LDI}                         |
[ 4 -999 4 3 3 4 ]{53: LT}                          |
[ 4 -999 4 3 1 ]{54: IFNZRO 18}                     |

[ 4 -999 4 3 ]{18: GETBP}                           |
[ 4 -999 4 3 2 ]{19: CSTI 1}                        |
[ 4 -999 4 3 2 1 ]{21: ADD}                         | // print i
[ 4 -999 4 3 3 ]{22: LDI}                           |
[ 4 -999 4 3 3 ]{23: PRINTI}                        |

3 [ 4 -999 4 3 3 ]{24: INCSP -1}                    |
[ 4 -999 4 3 ]{26: GETBP}                           |
[ 4 -999 4 3 2 ]{27: CSTI 1}                        |
[ 4 -999 4 3 2 1 ]{29: ADD}                         |
[ 4 -999 4 3 3 ]{30: GETBP}                         |
[ 4 -999 4 3 3 2 ]{31: CSTI 1}                      | // increment i
[ 4 -999 4 3 3 2 1 ]{33: ADD}                       |
[ 4 -999 4 3 3 3 ]{34: LDI}                         |
[ 4 -999 4 3 3 3 ]{35: CSTI 1}                      |
[ 4 -999 4 3 3 3 1 ]{37: ADD}                       |
[ 4 -999 4 3 3 4 ]{38: STI}                         |

[ 4 -999 4 4 4 ]{39: INCSP -1}                      |
[ 4 -999 4 4 ]{41: INCSP 0}                         |
[ 4 -999 4 4 ]{43: GETBP}                           |
[ 4 -999 4 4 2 ]{44: CSTI 1}                        |
[ 4 -999 4 4 2 1 ]{46: ADD}                         |
[ 4 -999 4 4 3 ]{47: LDI}                           | // i < n
[ 4 -999 4 4 4 ]{48: GETBP}                         |
[ 4 -999 4 4 4 2 ]{49: CSTI 0}                      |
[ 4 -999 4 4 4 2 0 ]{51: ADD}                       |
[ 4 -999 4 4 4 2 ]{52: LDI}                         |
[ 4 -999 4 4 4 4 ]{53: LT}                          |
[ 4 -999 4 4 0 ]{54: IFNZRO 18}                     |
                                
[ 4 -999 4 4 ]{56: INCSP -1}                        | End of function
[ 4 -999 4 ]{58: RET 0}                             |

[ 4 ]{4: STOP}                                      | End of program





8.3 
We have taken the implementation from assignment 6 and added it in Comp.fs line 208-209



8.4: 


The reason why ex8 is slower than prog1 is because it does a lot of uselss operation like loading the base pointer with 13 0 0 1 which is essentially the same as 13 1