
  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0                // load int 0 onto the stack
         1: istore_1                // 	store int value into variable 1
         2: iload_1                 // load int from local variable 1
         3: aload_0                 // load reference to the stack from local variable 0
         4: arraylength // Get length of arr
         5: if_icmpge     57        // if value 1 > 0 jump to instruction 57
         8: iload_1                 // load int from local variable 1
         9: istore_2                // store int into local variable 2
        10: iload_1                 // load intn from local variable 1
        11: iconst_1                // load an int from an array
        12: iadd                    // add two ints
        13: istore_3                // store int value into variable 3
        14: iload_3                 // 	load an int value from local variable 3
        15: aload_0                 // 	load a reference onto the stack from local variable 0
        16: arraylength             // 	get the length of an array
        17: if_icmpge     37        // if value1 is greater than or equal to value2, branch to instruction at branchoffset
        20: aload_0                 // load a reference onto the stack from local variable 0
        21: iload_3                 // load an int value from local variable 3
        22: iaload                  // load int from array
        23: aload_0                 // load reference to stack from local variable 0
        24: iload_2                 // load an int value from local variable 2
        25: iaload                  // load int from array
        26: if_icmpge     31        // if value 1 is greather or equal to 2 jump to instruction 31
        29: iload_3                 // load an int value from local variable 3 
        30: istore_2                // store int value into variable 2
        31: iinc          3, 1      // Increment local variable at index 3 by 1
        34: goto          14        // goes to another instruction at branchoffset
        37: aload_0                 // load a reference onto the stack from local variable 0
        38: iload_1                 // load an int value from local variable 1
        39: iaload                  // load an int from an array
        40: istore_3                // store int value into variable 3
        41: aload_0                 // load a reference onto the stack from local variable 0
        42: iload_1                 // load an int value from local variable 1
        43: aload_0                 // load a reference onto the stack from local variable 0
        44: iload_2                 // load an int value from local variable 2
        45: iaload                  // load an int from an array
        46: iastore                 // store an int in an array
        47: aload_0                 // load a reference onto the stack from local variable 0
        48: iload_2                 // load an int value from local variable 2
        49: iload_3                 // load an int value from local variable 3
        50: iastore                 // stores an integer in an array
        51: iinc          1, 1      // Increments local variable at index 1 by 1
        54: goto          2         // Jumps to instruction 2
        57: return                  // Returns

}